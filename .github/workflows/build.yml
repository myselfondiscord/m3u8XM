name: Build and release binaries

on: [push]

jobs:
  build-windows:
    name: Build Windows EXE
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4 
      - name: Set up Python 3.12
        uses: actions/setup-python@v5  
        with:
          python-version: '3.12'
      - name: Install PyInstaller and requests
        run: pip install pyinstaller requests
      - name: Build EXE
        run: pyinstaller --onefile sxm.py
      - name: Upload Windows EXE
        uses: actions/upload-artifact@v4  
        with:
          name: sxm.exe
          path: dist/sxm.exe

  build-macos:
    name: Build macOS Universal Binary
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install PyInstaller and requests
        run: pip install pyinstaller requests
      - name: Build universal macOS binary
        run: |
          pyinstaller --onefile sxm.py --name sxm-macos --target-arch universal2
      - name: Make macOS binary executable
        run: chmod +x dist/sxm-macos
      - name: Upload macOS binary
        uses: actions/upload-artifact@v4
        with:
          name: sxm-macos
          path: dist/sxm-macos

  

  release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Windows EXE
        uses: actions/download-artifact@v4
        with:
          name: sxm.exe
          path: .

      - name: Download macOS binary
        uses: actions/download-artifact@v4
        with:
          name: sxm-macos
          path: .

      - name: Bump version and push tag
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        id: create_tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch

      - name: Create Release & upload assets
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.create_tag.outputs.new_tag }}
          name: Release ${{ steps.create_tag.outputs.new_tag }}
          artifacts: |
            sxm.exe,sxm-macos
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
